{"version":3,"sources":["api.js","components/LoginDialog.js","store.js","client/Auth.js","client/Login.js","components/PaslonDialog.js","components/PaslonNavigation.js","client/Home.js","client/App.js","admin/Auth.js","components/AdminLoginDialog.js","admin/Login.js","admin/App.js","serviceWorker.js","index.js"],"names":["others","baseURL","LoginDialog","React","createContext","props","state","siswa","kelas","kelasClicked","siswaClicked","nis","isKelasClicked","handleChange","bind","handleSubmit","componentDidMount","handleKelasClicked","API","get","then","response","setState","data","Kelas","catch","err","console","log","event","this","target","value","preventDefault","name","post","nama","handleResponseLogin","Card","className","Body","Title","Date","getFullYear","Form","onSubmit","Group","controlId","Label","Control","required","as","onChange","onClick","map","kls","key","_id","sw","type","placeholder","Button","variant","Component","auth","cb","Login","handleWasLogin","login","history","push","PaslonDialog","calon","isStatus201","handlePilihan","put","_id_calon","_id_siswa","message","alert","handleWasPilih","Alert","Img","src","gambar","ketua","wakil","Text","visi","ListGroup","ListGroupItem","misi_1","misi_2","misi_3","PaslonNavigation","Navbar","bg","Brand","Home","handleDeleteSession","Auth","logout","style","overflow","Header","App","loginStatus","exact","path","render","isAuth","to","pathname","from","location","a","localStorage","setItem","JSON","stringify","clear","getItem","AdminLoginDialog","username","password","admin","hasLogin","Boolean","window","hostname","match","require","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.d6309215.chunk.js","sourcesContent":["import * as others from 'axios';\r\n\r\nexport default others.create({\r\n    baseURL: 'https://piketosservernodejs.herokuapp.com/api/'\r\n    // baseURL:'http://localhost:3001/api/'\r\n});","import React from 'react';\r\nimport { Form, Button, Card, Dropdown } from 'react-bootstrap';\r\nimport API from '../api';\r\nimport { Context } from '../store';\r\n\r\nclass LoginDialog extends React.Component {\r\n\r\n    // const [siswa,setSiswa]=useContext(Context);\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            siswa: [],\r\n            kelas: [],\r\n            kelasClicked: '',\r\n            siswaClicked: '',\r\n            nis: '',\r\n            isKelasClicked: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n        this.handleKelasClicked = this.handleKelasClicked.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        API.get('/kelas').then(response => {\r\n            // console.log(response.data.Kelas)\r\n            this.setState({\r\n                kelas: response.data.Kelas\r\n            })\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    handleKelasClicked(event) {\r\n        // console.log(event.target.value)\r\n        this.setState({\r\n            kelasClicked: event.target.value\r\n        });\r\n        console.log(event.target.value)\r\n        API.get('/siswa/kelas/' + event.target.value).then(response => {\r\n            this.setState({\r\n                siswa: response.data.siswa,\r\n                isKelasClicked: true\r\n            });\r\n            // console.log(response.data.siswa)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    handleChange(event) {\r\n        event.preventDefault();\r\n\r\n        const target = event.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        // console.log(event.target.kelas.value)\r\n\r\n        API.post(\"/pelaksanaan/login\", {\r\n            nama: event.target.nama.value,\r\n            nis: event.target.nis.value\r\n        })\r\n        .then((response) => {\r\n            if (response.data.siswa != null) {\r\n                this.props.handleResponseLogin(response.data);\r\n            }\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        });\r\n\r\n        this.setState({\r\n            kelasClicked: '',\r\n            siswaClicked: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Card className=\"col-8 col-sm-6 col-xl-4 mx-auto login-card\">\r\n                    <Card.Body>\r\n                        <Card.Title>PILKETOS {new Date().getFullYear()}</Card.Title>\r\n                        <Form onSubmit={this.handleSubmit} className=\" login-dialog\">\r\n                            <Form.Group controlId=\"kelas\">\r\n                                <Form.Label>Kelas</Form.Label>\r\n                                <Form.Control required as=\"select\" value={this.state.kelasClicked} onChange={this.handleKelasClicked} onClick={this.handleKelasClicked}>\r\n                                    {this.state.kelas.map(kls => {\r\n                                        return <option key={kls._id}>{kls.nama}</option>\r\n                                    })}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            {\r\n                                this.state.isKelasClicked ?\r\n                                    <Form.Group controlId=\"nama\">\r\n                                        <Form.Label>Nama Lengkap</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"siswaClicked\" value={this.state.siswaClicked} onChange={this.handleChange}>\r\n                                            {this.state.siswa.map(sw => {\r\n                                                return <option key={sw._id}>{sw.nama}</option>\r\n                                            })}\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    : null\r\n                            }\r\n\r\n                            <Form.Group controlId=\"nis\">\r\n                                <Form.Label>Nomor NIS</Form.Label>\r\n                                <Form.Control name=\"nis\" type=\"number\" placeholder=\"NIS\" value={this.state.nis} onChange={this.handleChange} />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Submit\r\n                        </Button>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginDialog;","import React,{useState} from 'react';\r\n\r\nconst initialState={\r\n    siswa:{}\r\n};\r\n\r\nexport const Context= React.createContext();\r\n\r\nconst Store = ({ children }) => {\r\n    const [state,setState] = useState(initialState);\r\n    return (\r\n        <Context.Provider value={[state,setState]}>{children}</Context.Provider>\r\n    );\r\n};\r\n\r\nexport default Store;","class Auth {\r\n    constructor(){\r\n        this.auth=false;\r\n    }\r\n    login(cb){\r\n        this.auth=true;\r\n        cb()\r\n    }\r\n    logout(cb){\r\n        this.auth=false;\r\n        cb()\r\n    }\r\n    isAuth(){\r\n        return this.auth;\r\n    }\r\n}\r\n\r\nexport default new Auth();","import React from 'react';\r\nimport LoginComponent from '../components/LoginDialog'\r\nimport auth from './Auth';\r\n\r\nclass Login extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleResponseLogin=this.handleResponseLogin.bind(this);\r\n    }\r\n    handleResponseLogin(data){\r\n\r\n        this.props.handleWasLogin(data);\r\n        auth.login(()=>{\r\n            this.props.history.push('/');\r\n        });\r\n    }\r\n    render(){\r\n        return(\r\n            <LoginComponent handleResponseLogin={this.handleResponseLogin}/>\r\n        )\r\n    }\r\n}\r\nexport default Login;","import React, { Component } from 'react'\r\nimport API from '../api'\r\nimport {Alert,Card,ListGroupItem,ListGroup,Button} from 'react-bootstrap'\r\nclass PaslonDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state =\r\n        {\r\n            calon: props.calon,\r\n            isStatus201: false\r\n        };\r\n        this.handlePilihan = this.handlePilihan.bind(this)\r\n    }\r\n    handlePilihan() {\r\n        API.put('/pelaksanaan/vote/' + this.props.siswa._id + '/' + this.state.calon._id, {\r\n            _id_calon: this.state.calon._id,\r\n            _id_siswa: this.props.siswa\r\n        }).then(response => {\r\n            // console.log(response.data.message=='false')\r\n            if (response.data.message === 'false') {\r\n                this.setState({\r\n                    isStatus201: true\r\n                })\r\n            } else {\r\n                alert(\"Terima Kasih Atas Partisipasimu!\")\r\n                this.props.handleWasPilih(response.data);\r\n            }\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                {\r\n                    (this.state.isStatus201) ?\r\n                        <>\r\n                            <Alert variant=\"danger\"className=\"alert-home mx-auto\">Kamu Sudah Memilih</Alert>\r\n                            <br />\r\n                            <Button variant=\"secondary\" onClick={this.props.handleWasPilih}>Keluar</Button>\r\n                        </>\r\n                        :\r\n                        <Card className=\"col-11 col-sm-11 col-lg-9 col-xl-8 mx-auto\">\r\n                            <Card.Img variant=\"top\" src={\"http://localhost:3001/images/\"+ this.state.calon.gambar} />\r\n                            <Card.Body>\r\n                                <Card.Title>{ this.state.calon.ketua} dan {this.state.calon.wakil}</Card.Title>\r\n                                <Card.Text>\r\n                                    {this.state.calon.visi}\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                            <ListGroup className=\"list-group-flush\">\r\n                                <ListGroupItem>{this.state.calon.misi_1}</ListGroupItem>\r\n                                <ListGroupItem>{this.state.calon.misi_2}</ListGroupItem>\r\n                                <ListGroupItem>{this.state.calon.misi_3}</ListGroupItem>\r\n                            </ListGroup>\r\n                            <Card.Body>\r\n                                <Button className=\"col-6 mx-auto\" variant=\"primary\" type=\"submit\" onClick={this.handlePilihan}>\r\n                                COBLOS\r\n                                </Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PaslonDialog;","import React from 'react';\r\nimport {Navbar} from 'react-bootstrap';\r\n\r\nclass PaslonNavigation extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <Navbar bg=\"light\">\r\n                <Navbar.Brand>{this.props.nama}</Navbar.Brand>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PaslonNavigation;","import React from 'react';\r\nimport {Alert,Card} from 'react-bootstrap';\r\n\r\nimport API from '../api';\r\nimport Auth from './Auth';\r\nimport PaslonDialog from '../components/PaslonDialog';\r\nimport PaslonNavigation from '../components/PaslonNavigation';\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            calon:[]\r\n        }\r\n        this.handleWasPilih=this.handleWasPilih.bind(this)\r\n        this.componentDidMount=this.componentDidMount.bind(this)\r\n    }\r\n    async componentDidMount(){\r\n        API.get('/calon').then(response=>{\r\n            this.setState({\r\n                calon:response.data.calon\r\n            })\r\n            // console.log(this.state.calon)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    handleWasPilih(data){\r\n        this.props.handleDeleteSession();\r\n        this.setState({\r\n            calon:[]\r\n        })\r\n        Auth.logout(()=>{\r\n            this.props.history.push('/login');\r\n        })\r\n    }\r\n    render() {return (\r\n        <>\r\n            <PaslonNavigation nama=\"PILKETOS\"/>\r\n            <br/>\r\n            <Alert variant=\"primary\" className=\"alert-home\">\r\n               Selamat Datang, {this.props.siswa.nama}\r\n            </Alert>\r\n            <br/>\r\n            <Card className=\"col-10 col-sm-7 col-lg-5 col-xl-5 mx-auto\" style={{overflow:\"hidden\"}}>\r\n                <Card.Header className=\"mx-auto\">Silahkan Pilih Paslon Anda\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    {this.state.calon.map(calon=>{\r\n                        return <PaslonDialog key={calon._id} calon={calon} siswa={this.props.siswa} handleWasPilih={this.handleWasPilih}/>\r\n                    })}\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n        )}\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport Login from './Login'\r\nimport Home from './Home'\r\nimport Auth from './Auth';\r\n\r\nexport default class App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            siswa: {},\r\n            loginStatus: false\r\n        };\r\n        this.handleWasLogin = this.handleWasLogin.bind(this);\r\n        this.handleDeleteSession=this.handleDeleteSession.bind(this)\r\n    }\r\n\r\n    handleWasLogin(data) {\r\n        this.setState({\r\n            loginStatus: true,\r\n            siswa: data.siswa\r\n        })\r\n    }\r\n    handleDeleteSession(){\r\n        this.setState({\r\n            loginStatus:false,\r\n            siswa:{}\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n            <Switch>\r\n                <Route\r\n                    exact\r\n                    path={\"/login\"}\r\n                    render={(props) => (\r\n                        <Login {...props} handleWasLogin={this.handleWasLogin} loginStatus={this.state.loginStatus} />\r\n                    )}>\r\n                </Route>\r\n                \r\n                <Route\r\n                    exact\r\n                    path={\"/\"}\r\n                    // component={Home}\r\n                    render={props =>{\r\n                        if(Auth.isAuth()){\r\n                            return <Home {...props} siswa={this.state.siswa} handleDeleteSession={this.handleDeleteSession}/>\r\n                        }else{\r\n                            return <Redirect to={\r\n                                {\r\n                                    pathname:\"/login\",\r\n                                    state: {\r\n                                        from:props.location\r\n                                    }\r\n                                }\r\n                            }/>\r\n                        }\r\n                    }}\r\n                />\r\n               \r\n            </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n} ","class Auth {\r\n    login(cb,a){\r\n        localStorage.setItem('token',JSON.stringify(cb));\r\n        a()\r\n    }\r\n    logout(cb){\r\n        localStorage.clear();\r\n        cb()\r\n    }\r\n    isAuth(){\r\n        return localStorage.getItem('token');\r\n    }\r\n}\r\n\r\nexport default new Auth();","import React from 'react';\r\nimport {Card,Form,Button} from 'react-bootstrap';\r\nimport API from '../api';\r\n\r\nclass AdminLoginDialog extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            username:'',\r\n            password:'',\r\n            data:{}\r\n        }\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n        this.handleChange=this.handleChange.bind(this);\r\n    }\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        // console.log(this.state.username)\r\n        API.post('/pelaksanaan/admin',{\r\n            username:this.state.username,\r\n            password:this.state.password\r\n        }).then(response=>{\r\n            // console.log(response.data);\r\n            if(response.data.admin===null){\r\n                alert(\"Tidak Ditemukan\")\r\n            }else{\r\n                this.props.handleWasLogin(response.data.admin);\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n    handleChange(event){\r\n        const name=event.target.name;\r\n        const value=event.target.value;\r\n        event.preventDefault();\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <Card className=\"col-8 col-sm-6 col-xl-4 mx-auto login-card-admin\">\r\n                    <Card.Body>\r\n                        <Card.Title>LOGIN ADMIN PILKETOS</Card.Title>\r\n                        <Form onSubmit={this.handleSubmit} className=\" login-dialog\">\r\n                            <Form.Group controlId=\"username\">   \r\n                                <Form.Label>Username</Form.Label>\r\n                                <Form.Control required name=\"username\" type=\"text\" placeholder=\"Username\" value={this.state.username} onChange={this.handleChange}/>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"password\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control required name=\"password\" type=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.handleChange} />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Submit\r\n                        </Button>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default AdminLoginDialog;","import React from 'react';\r\nimport LoginDialog from '../components/AdminLoginDialog';\r\nimport Auth from './Auth';\r\n\r\nclass Login extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.handleWasLogin=this.handleWasLogin.bind(this)\r\n    }\r\n    handleWasLogin(data){\r\n        this.props.hasLogin(data)\r\n        Auth.login(data,()=>{\r\n            this.props.history.push('/admin')\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n            <LoginDialog handleWasLogin={this.handleWasLogin}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route ,Redirect} from 'react-router-dom';\r\nimport Auth from './Auth';\r\nimport Login from './Login';\r\n\r\nclass App extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            data:{}\r\n        }\r\n        this.hasLogin=this.hasLogin.bind(this)\r\n    }\r\n    hasLogin(data){\r\n        this.setState({\r\n            data:data\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Switch>\r\n                    <Route\r\n                        exact\r\n                        path={\"/admin/login\"}\r\n                        render={(props) => (\r\n                            <Login {...props} hasLogin={this.hasLogin}/>\r\n                        )}>\r\n                    </Route>\r\n\r\n                    <Route\r\n                        exact\r\n                        path={\"/admin\"}\r\n                        // component={Home}\r\n                        render={props => {\r\n                            if (Auth.isAuth()) {\r\n                                return <h1>ADMIN</h1>\r\n                            } else {\r\n                                return <Redirect to={\r\n                                    {\r\n                                        pathname: \"/admin/login\",\r\n                                        state: {\r\n                                            from: props.location\r\n                                        }\r\n                                    }\r\n                                } />\r\n                            }\r\n                        }}\r\n                    />\r\n                    <Route path=\"*\" render={(props) => (\r\n                        <h1 className=\"text-center mx-auto\">404 NOT FOUND</h1>\r\n                    )} />\r\n\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport App from './client/App';\nimport AppServer from './admin/App';\nimport * as serviceWorker from './serviceWorker';\nrequire('bootstrap/dist/css/bootstrap.css');\nrequire('./index.css');\n\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Provider store={store}> */}\n      {/* <Router>\n        <Route path={'/'}> */}\n          <App />\n        {/* </Route> */}\n        {/* <Route path='/admin'>\n          <AppServer />\n        </Route> */}\n      {/* </Router> */}\n    {/* </Provider> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}